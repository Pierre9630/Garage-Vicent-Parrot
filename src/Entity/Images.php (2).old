<?php

namespace App\Entity;

use App\Repository\ImagesRepository;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
use Vich\UploaderBundle\Mapping\Annotation as Vich;

#[UniqueEntity('Name')]
#[ORM\Entity(repositoryClass: ImagesRepository::class)]
#[Vich\Uploadable]
class Images
{
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column]
    private ?int $id = null;

    #[ORM\Column(length: 255)]
    private ?string $Name = null;

    #[ORM\Column(length: 255)]
    private ?string $Path = null;

    #[ORM\ManyToOne(inversedBy: 'Image')]
    #[ORM\JoinColumn(nullable: false)]
    private ?Cars $cars = null;

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getName(): ?string
    {
        return $this->Name;
    }

    public function setName(string $Name): static
    {
        $this->Name = $Name;

        return $this;
    }

    public function getPath(): ?string
    {
        return $this->Path;
    }

    public function setPath(string $Path): static
    {
        $this->Path = $Path;

        return $this;
    }

    public function getCars(): ?Cars
    {
        return $this->cars;
    }

    public function setCars(?Cars $cars): self
    {
        // unset the owning side of the relation if necessary
        if ($cars === null && $this->cars !== null) {
            $this->cars->addImage(null);
        }

        // set the owning side of the relation if necessary
        if ($cars !== null && $cars->getImage() !== $this) {
            $cars->addImage($this);
        }

        $this->cars = $cars;
        //$this->cars = $cars;

        return $this;
    }
}
